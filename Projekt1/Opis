Eliza Hartel
Programowanie obiektowe- Cwiczenie 1
Sprawozdanie:

Zadania do wykonania:

Zadanie 1
Napisz program, który zwróci prawdę, jeśli jedna z dwóch temperatur jest mniejsza niż 100

    W zadaniu skorzystałam z instrukcji warunkowej if-else porównującą wartości zmiennej a i b (obydwie typu int).
    Temperatury zostały narzucone przeze mnie z góry- postanowiłam nie stosować w tym  zadaniu podstawowego
    wejścia (dla liczb)  np:
                 Scanner scanner = new Scanner(System.in);
                        int number = scanner.nextInt();
    Skorzystałam również z metody drukującej tekst na konsoli na początku nastepnego wiersza tj:
                        System.out.println("");

Zadanie 2
Napisz program, który zwróci prawdę, jeśli sekwencja liczb 1, 2, 3 pojawi się gdzieś w tablicy liczb całkowitych

    W zadaniu odgórnie utowrzyłam tablicę posiadającą około 210 elementów typu int.
    Wyświetlam elementy tablicy użytkownikowi stosując pętlę for oraz wcześniej wspomnianą metodę
    System.out.println, która w tym przypadku "drukuje" elementy tablicy zaczynając od pierwszego elementu
    tablicy, a kończąc na ostatnim elemencie tablicy.
    Aby sprawdzić występowanie sekwencji liczb 1,2,3 w tablicy używam pętli for, która niejako "przegląda"
    kolejne elementy tablicy oraz instrukcji warunkowej if-else, które z liczb tworzą między sobą sekwencję-
    tj. która liczba ma występować po której.
    W instrukcji warunkowej if-else program zwróci informacje na temat przebiegu sprawdzenia występowania
    sekwencji liczb 1,2,3.
    W części pierwszej- if: użytkownik zostanie poinformowany o pozytywnym przegiegu sprawdzenia występowania
    sekwencji oraz dzięki zastosowaniu metody String.valueOf zostaje poinformowany o ilości wystąpień sekwencji
    w tablicy.
    Druga część instrukcji warunkowej zostaje wykonana jeśli liczba wystąpień sekwencji liczb równa jest zero.
    "Printowana" jest wtedy informacja na temat negatywnego przebiegu sprawdzenia.

Zadanie 3
Napisz program, który sprawdza dla trzech boków trójkąta a, b i c wprowadzonych z klawiatury,
czy tworzą one trójkąt prostokątny (zakładamy, że a > 0, b > 0, c > 0).

    Podczas realizacji tego programu wykorzystałam metodę System.out.println w celu drugowania tekstów.
    Zastosowałam podstawowe wejście
                    Scanner scanner = new Scanner(System.in);
                         int number = scanner.nextInt();
    obsługujące zmienne typu int, która pobiera wprowadzane przez użytkownika z klawiatry wartości
    przypisywane zmiennym liczbowym-odpowiadające odpowiednim bokom trójkąta prostokątnego.
    Dzięki zastosowaniu instrukcji warunkowej if-else sprawdzam czy użytkownik nie wprowadził wartosci liczbowej
    mniejszej niż zero- jeśli taka sytuacja będzie miała miejsce- zostanie "wydrukowany" komunikat
    informujący o popełnieniu błędu.Na początku programu zamieściłam również sugestię dla użytkownika
    na temat tego jakie wartości liczbowe są obsługiwane przez program (większe od zera).
    Jak sprawdziłam czy trójkąt prostokątny będzie istniał?
    Skorzystałam z twierdzenia matematycznego mówiącego, iż trójkąt prostokątny istnieje wtedy, gdy
    suma kwadratów przyprostokątnych trójkąta
                        int przyprostokatne = a*a+b*b;
    rowna sie kwadratowi przeciwprostokatnej trojkata
                        int przeciwprostokatna = c*c;
    Za pomoca instrukcji warunkowej if-else if-else porównuje zmienne przyprostokatne oraz przeciwprostokatna.
    Jesli zmienne sa sobie rowne (w czesci else) program zwraca informacje o istnieniu trojkata prostokatnego.
    W przeciwnym razie program zwraca komunikat na temat nieskutecznego przebiegu programu
    tj- trojkat prostokatny nie istnieje. W przypadku pozytywnego rezultatu program również pole trójkąta prostokątnego.

Zadanie 4
 Użyj pętli do wyświetlenia następującego wzoru dla zadanej liczby wierszy
*
**
***
****
*****

    W zadaniu użyłam metody System.out.println do wyświetlania tekstu w oknie konsoli.
    Zastosowałam podstawowe wejście
                    Scanner scanner = new Scanner(System.in);
                         int wersy  = scanner.nextInt();
    umozliwiajace wybór użytkownikowi ile wierszy liczyć ma wzór dzięki pobraniu z klawiatury użytkownika
    wartosc zmiennej wersy oraz przypisaniu jej.
    Podwójne zastosowanie pętli for pozwala na drukowanie wzoru o zadanej liczbie wierszy.

Zadanie 5
Napisz program, który zwróci połowę ciągu znaków ze Stringa
    W zadaniu użyłam metody System.out.println do wyświetlania tekstu w oknie konsoli.
     Zastosowałam podstawowe wejście
                        Scanner scanner = new Scanner(System.in);
                             int slowo  = scanner.nextLine();
        umozliwiajace wpisanie przez użytkownika z klawiatury słowo.
    Program zwraca informację na temat ilości liter jaką zawiera wprowadzone słowo.
    Program drukuje połowe słowa dzięki metodzie System.out.println(slowo.substring(0,b);
    Metoda substring (0,b) wyodrębnia znaki z ciągu między dwoma określonymi indeksami oraz
    zwraca nowy ciąg podrzędny. 0,b  to zakres długości nowego słowa tj od zera do wcześniej zdefiniowanego
    b jako polowe dlugosci pierwotnego slowa,a tj b=a/2, a jest w tym przypadku dlugoscia wprowadzanego slowa.
     int a = slowo.length(); -zwraca dlugosc pierwotnie wprowadzanego slowa.

Zadanie 6
Napisz program, który zwróć nową tablicę z elementami w odwrotnej kolejności, np. {1, 2, 3} stanie się {3, 2, 1}.

    W programie utworzyłam niewielką trzyelementową tablicę składającą sie z kolejno ulozonych liczb: 1,2,3.
    Uważam, że nie było potrzeby, by tworzyć większą tablicę. Program wykonuje pewnego rodzaju algorytm,
    który sprawdza się również dla tablic liczących większą ilość elementów.
    Program wyświetla pierwotny wygląd tablicy korzystając z pętli for oraz metody System.out.println
    drukując elementy począwszy od pierwszego elementu tablicy(0) aż do ostatniego elementu (długość tablicy-tab.length)
    Wyświetlanie elementów tablicy w odwrotnej kolejności realizuję również przez uzycie metody System.out.println
    oraz pętli for, jednak wyświetlanie elementów zaczynam od "najstarszego elementu"
    (element o numerze równym długości tablcy pomniejszony o jeden), drukowanie elementów kończę zaś na najmłodszym,
    który jest większy lub równy zero.

Zadanie 7
Napisz klasę Pracownik, która przechowuje trzy pola: -Imię -Nazwisko -Wiek
Następnie utwórz klasę Firma, w której wykorzystasz klasę pracownik do utworzenia dwóch obiektów przechowujących
dane pracowników (wymyśl sobie jakieś) i później wyświetlasz je na ekran.

    Realizująć następujące zadanie utworzyłam dwie klasy- Pracownik oraz Firma.

    Klasa Firma służy w programie za klasę główną (main), która przechowuje dane pracowników oraz
    wyświetla wymagane przez autora dane dotyczące pracownika firmy.

    Klasa Pracownik zawiera słowo kluczowe podczas dziedziczenia "extend". Klasa ta deklaruje zmienne
    typu String: imie i nazwisko oraz typu int: wiek